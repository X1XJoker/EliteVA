name: release
permissions: write-all
on:
  workflow_dispatch:

jobs:
    release:
        runs-on: windows-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup .NET 8
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: "8.0.x"

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                profile: minimal
                toolchain: nightly
                override: true
                components: rustfmt, clippy, llvm-tools-preview
           
            - name: Apply Rust cache
              uses: actions/cache@v4
              with:
                path: |
                    ~/.cargo/bin/
                    ~/.cargo/registry/index/
                    ~/.cargo/registry/cache/
                    ~/.cargo/git/db/
                    target/            
                key: ${{ runner.os }}

            - name: Install committer
              run: cargo install --locked committer || true

            - name: Build
              run: dotnet build -c Release

            - name: Tag version
              id: tag_step
              run: |
                committer tag
                echo "is_new=$(cat .env/COMMITTER_IS_NEW)" >> $GITHUB_OUTPUT
                echo "tag=$(cat .env/COMMITTER_TAG)" >> $GITHUB_OUTPUT

            - name: Push tag to origin
             # if: steps.tag_step.outputs.is_new == 'true'
              run: |
                git config user.name "github-actions"
                git config user.email "github-actions@github.com"
                git push --tags origin
                echo ${{ secrets.GITHUB_TOKEN }}

            - name: Debug file exists
              run: dir bin\Release\net8.0\

            - name: Debug path
              run: ls bin/Release/net8.0/

            - name: Create release
             # if: steps.tag_step.outputs.is_new == 'true'
              uses: softprops/action-gh-release@v2
              with:
                files: bin/Release/net8.0/EliteVA.dll
                token: ${{ secrets.GITHUB_TOKEN }}
                tag_name: ${{ steps.tag_step.outputs.tag }}
                body_path: ".env/COMMITTER_CHANGELOG"
                draft: true
